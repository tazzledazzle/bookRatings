/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/tutorial_java_projects.html
 */
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.1.51'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
        classpath 'com.netflix.nebula:gradle-lint-plugin:latest.release'
    }
}

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'java-gradle-plugin'
apply plugin: 'nebula.lint'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    flatDir{
        dirs 'libs/lucene-7.0.1'
    }
}
apply plugin: 'org.junit.platform.gradle.plugin'

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.0"
    compile "org.xerial:sqlite-jdbc:3.8.11"
    compile 'org.jsoup:jsoup:1.10.3'

    //lucene
    compile name:'core/lucene-core-7.0.1'
    compile name:'queryparser/lucene-queryparser-7.0.1'

    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile ("org.jetbrains.spek:spek-api:1.1.5"){
        exclude group: "org.jetbrains.kotlin"
    }
    testRuntime ("org.jetbrains.spek:spek-junit-platform-engine:1.1.5") {
        exclude group: "org.junit.platform"
        exclude group: "org.jetbrains.kotlin"
    }
}

repositories {
    jcenter()
}

dependencies {
    compile 'com.github.kittinunf.fuel:fuel:1.10.0' //for JVM
    compile 'com.github.kittinunf.result:result:1.2.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.22'
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}


task convertMobiToHtml {
    doLast {
        List<String> bookPaths = fileTree(dir: "/Users/tschumacher/Documents/kindle-pack-2", includes: ["*.mobi"])
                .collect{ it.absolutePath }

        for (book in bookPaths) {
            String bookname = book.split("/").last().replace(".mobi", "")
            println(bookname)
            if(!file("bookTexts2/$bookname").exists()) {
                project.exec {
                    executable 'python'
                    args 'mobi-python-master/mobiunpack.py', "$book", "bookTexts2/$bookname"
                }
            }
        }
    }
}

task convertHtmlToText {
    doLast {
        String dirLoc = "bookTexts/"
        List<String> bookPaths = fileTree(dir: dirLoc, includes: ["**/*.html"]).collect {
            it.absolutePath
        }

        for (path in bookPaths) {
            String htmlFileText = Jsoup.parse(file(path).text).text()
        }
    }
}